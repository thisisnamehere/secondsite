import dotenv from 'dotenv';
import { initDatabase, dbAll, dbRun } from './db.js';

dotenv.config();

// –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö - –ø–æ –æ–¥–Ω–æ–º—É —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ—Ä–æ–¥–∞
const testInstruments = [
  { city: '–ú–æ—Å–∫–≤–∞', name: '–°–∫–∞–ª—å–ø–µ–ª—å —Ö–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–∏–π ‚Ññ11', category: '–í—Ä–∞—á–∞–º', quantity: 25, status: 'available', note: '–î–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π' },
  { city: '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä', name: '–ó–µ—Ä–∫–∞–ª–æ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ', category: '–°—Ç—É–¥–µ–Ω—Ç–∞–º', quantity: 15, status: 'in_transit', note: '–í –ø—É—Ç–∏ –∏–∑ —Å–∫–ª–∞–¥–∞' },
  { city: '–í–æ–ª–≥–æ–≥—Ä–∞–¥', name: '–®–ø–∞—Ç–µ–ª—å –∑—É–±–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π', category: '–ó—É–±–æ—Ç–µ—Ö–Ω–∏–∫–∞–º', quantity: 30, status: 'available', note: '–î–ª—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏' },
];

async function seed() {
  try {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    await initDatabase();
    
    console.log('üå± –ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    // –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥–∞
    const cities = await dbAll('SELECT id, name FROM cities');

    if (cities.length === 0) {
      console.log('‚ùå –ì–æ—Ä–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å.');
      process.exit(1);
    }

    console.log('üìã –ù–∞–π–¥–µ–Ω–æ –≥–æ—Ä–æ–¥–æ–≤:', cities.length);

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    for (const instrument of testInstruments) {
      const city = cities.find(c => c.name === instrument.city);
      
      if (!city) {
        console.log(`‚ö†Ô∏è  –ì–æ—Ä–æ–¥ "${instrument.city}" –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
        continue;
      }

      const lookup = `${instrument.name} ${instrument.category}`.toLowerCase();
      
      await dbRun(
        `INSERT INTO instruments (city_id, name, category, quantity, status, note, lookup, received_at) 
         VALUES (?, ?, ?, ?, ?, ?, ?, date('now'))`,
        [city.id, instrument.name, instrument.category, instrument.quantity, instrument.status, instrument.note, lookup]
      );

      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: ${instrument.name} ‚Üí ${instrument.city}`);
    }

    console.log('');
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
    console.log('');
    console.log('üìä –ò—Ç–æ–≥–æ:');
    console.log(`   –ì–æ—Ä–æ–¥–æ–≤: ${cities.length}`);
    console.log(`   –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: ${testInstruments.length}`);
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  }
}

seed();
