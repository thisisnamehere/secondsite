import dotenv from 'dotenv';
import { dbRun, dbGet } from './db.js';

dotenv.config();

async function testAdd() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≥–æ—Ä–æ–¥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const city = await dbGet('SELECT * FROM cities WHERE id = 1');
    console.log('–ì–æ—Ä–æ–¥:', city);
    
    if (!city) {
      console.log('‚ùå –ì–æ—Ä–æ–¥ —Å ID 1 –Ω–µ –Ω–∞–π–¥–µ–Ω');
      process.exit(1);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
    const testInstrument = {
      city_id: 1,
      name: '–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫–∞–ª—å–ø–µ–ª—å',
      category: '–í—Ä–∞—á–∞–º',
      quantity: 10,
      status: 'available',
      note: '–¢–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç',
      lookup: '—Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫–∞–ª—å–ø–µ–ª—å –≤—Ä–∞—á–∞–º',
      received_at: new Date().toISOString().split('T')[0]
    };
    
    const result = await dbRun(
      `INSERT INTO instruments (city_id, name, category, quantity, status, note, lookup, received_at)
       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`,
      [
        testInstrument.city_id,
        testInstrument.name,
        testInstrument.category,
        testInstrument.quantity,
        testInstrument.status,
        testInstrument.note,
        testInstrument.lookup,
        testInstrument.received_at
      ]
    );
    
    console.log('‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω —Å ID:', result.lastID);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–æ–±–∞–≤–∏–ª—Å—è
    const added = await dbGet('SELECT * FROM instruments WHERE id = ?', [result.lastID]);
    console.log('–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:', added);
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

testAdd();
